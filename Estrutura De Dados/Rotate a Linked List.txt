
/* node of linked list:

class Node{
    int data;
    Node next;
    Node(int d){
        data=d;
        next=null;
    }
}

*/

class Solution{
    //Function to rotate a linked list.
    public Node rotate(Node head, int k) {
        if(k <= 0 || head == null || head.next==null){
            return head;
        }
        
        int rotations = k % length(head);
        
        if(rotations == 0){
            return head;
        }else{
            Node newLast = head;
            Node last = head;
            
            for(int i = 1; i < rotations; i++){
                newLast = newLast.next;
            }
            
            while(last.next!=null){
                last = last.next;
            }
            
            last.next = head;
            head = newLast.next;
            newLast.next = null;
            
            return head;
        }
    }
    
    public int length(Node head){
        
        Node temp = head;
        int count = 1;
        while(temp.next!=null){
            temp = temp.next;
            count++;
        }
        return count;
    }
}